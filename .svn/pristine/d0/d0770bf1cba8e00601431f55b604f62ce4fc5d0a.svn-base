<?php
namespace App\Repository\Filter;

use App\Models\Statement;

use App\iLRS\Traits\FilterableTrait;

class FilterRepository implements IFilterRepository
{
    use FilterableTrait;

    protected $filter;

    /**
     * Add valid fileds in valid Filterable Fields array
     * Create filter object with the reference of Statement
     * FilterRepository constructor.
     * @param Statement $statements
     */
    public function __construct(Statement $statements)
    {
        $this->validFilterableFields = ['statementId', 'voidedStatementId', 'agent', 'verb', 'activity', 'registration', 'related_activities', 'related_agents', 'since', 'until', 'limit', 'format', 'attachments', 'ascending'];
        $this->filter = $statements;
    }

    /**
     * filterBy to filter input parameter
     * @param $filters
     * @return $this
     */
    public function filterBy($filters)
    {
        $this->addFilter($filters);
        return $this;
    }

    /**
     * Add filters parameter in where condition to get matching records
     * @return mixed
     */
    public function all()
    {
        return $this->filter->where($this->filters)->get()->toArray();;
    }

}